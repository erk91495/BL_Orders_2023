<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="BlOrders2023.Views.AllocatorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BlOrders2023.Views"
    xmlns:models ="using:BlOrders2023.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sf="using:Syncfusion.UI.Xaml.DataGrid"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:uc="using:BlOrders2023.UserControls"
    xmlns:vm="using:BlOrders2023.ViewModels.Converters"
    xmlns:wctprimitives="using:CommunityToolkit.WinUI.UI.Controls.Primitives"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="AllocatorPage_Loaded">
    <Page.Resources>
        <vm:FloatToStringConverter x:Key="FloatToStringConverter"/>
    </Page.Resources>
    
    <RelativePanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <SplitView 
            RelativePanel.AlignTopWithPanel="True" 
            RelativePanel.AlignBottomWithPanel="True" 
            RelativePanel.AlignLeftWithPanel="True" 
            RelativePanel.AlignRightWithPanel="True"
            DisplayMode="Inline"
            IsPaneOpen="True"
            PanePlacement="Right"
            OpenPaneLength="300"
            CornerRadius="1">
            <SplitView.Pane>
                <RelativePanel x:Name="PaneArea" 
                               Background="{ThemeResource SystemAltMediumLowColor}"
                               CornerRadius="10,0,0,10">

                    <sf:SfDataGrid x:Name="InventoryGrid" 
                                       Padding="20,20,0,20"
                                       BorderBrush="Transparent"
                                       ItemsSource="{x:Bind ViewModel.CurrentInventory, Mode=OneWay}"
                                       AutoGenerateColumns="False"
                                       RelativePanel.AlignTopWithPanel="True"
                                       RelativePanel.AlignLeftWithPanel="True"
                                       RelativePanel.AlignRightWithPanel="True"
                                       RelativePanel.Above="ButtonsGrid"
                                       IsReadOnly="True">
                        <sf:SfDataGrid.Columns>
                            <sf:GridTextColumn MappingName="ProductID" HeaderText="ID" IsReadOnly="True"/>
                            <sf:GridTextColumn MappingName="QuantityOnHand" HeaderText="On Hand" IsReadOnly="True"/>
                        </sf:SfDataGrid.Columns>

                    </sf:SfDataGrid>
                    <!--<controls:DataGrid x:Name="InventoryGrid" 
                                   Padding="20,20,0,20"
                                   BorderBrush="Transparent"
                                   ItemsSource="{x:Bind ViewModel.CurrentInventory, Mode=OneWay}"
                                   AutoGenerateColumns="False"
                                   RelativePanel.AlignTopWithPanel="True"
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.AlignRightWithPanel="True"
                                   RelativePanel.Above="ButtonsGrid"
                                   IsReadOnly="True">
                        <controls:DataGrid.Columns>
                            <controls:DataGridTemplateColumn Header="ID" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:InventoryItem">
                                        <TextBlock Text="{x:Bind ProductID, Mode=OneWay}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>

                            <controls:DataGridTemplateColumn Header="On Hand" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:InventoryItem">
                                        <TextBlock Text="{x:Bind QuantityOnHand, Mode=OneWay}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>

                        </controls:DataGrid.Columns>
                        
                    </controls:DataGrid>-->
                    <Grid x:Name="ButtonsGrid"
                          RelativePanel.AlignBottomWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"
                          Padding="12,0,12,15"
                          ColumnSpacing="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btn_Save" Click="btn_Save_Click" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                            <RelativePanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <TextBlock Text="Save" 
                                           RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                                <ProgressRing x:Name="rng_Save"
                                              IsActive="True" 
                                              MaxHeight="12" 
                                              MaxWidth="12" 
                                              Visibility="Collapsed"
                                              RelativePanel.AlignRightWithPanel="True"
                                              RelativePanel.AlignVerticalCenterWithPanel="True"/>
                            </RelativePanel>
                        </Button>
                        <Button x:Name="btn_SavePrint" Click="btn_SavePrint_Click" Grid.Column="1" HorizontalAlignment="Stretch" >
                            <RelativePanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <ProgressRing x:Name="rng_SavePrint"
                                              IsActive="True" 
                                              MaxHeight="12" 
                                              MaxWidth="12" 
                                              Visibility="Collapsed"
                                              RelativePanel.AlignRightWithPanel="True"
                                              RelativePanel.AlignVerticalCenterWithPanel="True"
                                              Margin="10,0,0,0"/>
                                <TextBlock Text="Save &amp; Print"
                                           RelativePanel.LeftOf="rng_SavePrint"
                                           TextWrapping="NoWrap"/>

                            </RelativePanel>
                        </Button>
                    </Grid>
                </RelativePanel>
            </SplitView.Pane>

            <SplitView.Content>
                <RelativePanel x:Name="ContentArea">
                    <StackPanel x:Name="AllocationModeStack" Orientation="Horizontal"
                                RelativePanel.AlignTopWithPanel="True">
                        <TextBlock Text="AllocationMode:" Margin="0,0,10,0" FontSize="20" FontWeight="Bold"/>
                        <TextBlock Text="{x:Bind ViewModel.AllocatorMode, Mode=OneWay}" FontSize="20" FontWeight="Bold"/>
                    </StackPanel>

                    <Button RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignTopWith="AllocationModeStack">
                        <SymbolIcon Symbol="More"/>
                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem x:Name="btn_PrintSummary" Text="Print Allocation Summary" Icon="Print" Click="PrintFlyoutButton_Click"/>
                                <MenuFlyoutItem x:Name="btn_PrintDetails" Text="Print Allocation Details" Icon="Print" Click="PrintFlyoutButton_Click"/>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <!--<GridView ItemsSource="{x:Bind ViewModel.AllocatedOrders, Mode=TwoWay}" SelectionMode="None">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="models:Order">
                                <Expander IsExpanded="True" ExpandDirection="Down">
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal" Spacing="10">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Order ID:"/>
                                                <TextBlock Text="{x:Bind OrderID, Mode=OneWay}"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Ordered:"/>
                                                <TextBlock Text="{x:Bind GetTotalOrdered(), Mode=OneWay}"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Allocated:"/>
                                                <TextBlock Text="{x:Bind GetTotalAllocated(), Mode=OneWay}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <NumberBox Text="{x:Bind Items[0].QuanAllocated, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                                            <uc:AllocatedItemsGridControl Items="{x:Bind Items, Mode=OneWay}" ValidateCell="AllocatedItemsGridControl_ValidateCell"/>
                                            <sf:SfDataGrid ItemsSource="{x:Bind Path=Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CurrentCellValidating="AllocatedItemsGridControl_ValidateCell" AutoGenerateColumns="False">
                                    <sf:SfDataGrid.Columns>
                                        <sf:GridNumericColumn MappingName="QuanAllocated" AllowEditing="True" DataValidationMode="InView"/>
                                    </sf:SfDataGrid.Columns>
                                </sf:SfDataGrid>
                                    </Expander.Content>

                                </Expander>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>-->


                    <!--<sf:SfDataGrid
                        RelativePanel.Below="AllocationModeStack"
                        RelativePanel.AlignBottomWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True" 
                        RelativePanel.AlignRightWithPanel="True"
                        x:Name="OrdersGrid"
                        ItemsSource="{x:Bind ViewModel.AllocatedOrders, Mode=TwoWay}"
                        AutoGenerateColumns="False"
                        Style="{StaticResource AllocationDataGridStyle}"
                        RowStyle="{StaticResource AllocationDataGridRowStyle}"
                        CellStyle="{StaticResource AllocationDataGridCellStyle}"
                        Background="{StaticResource AcrylicBackgroundFillColorBaseBrush}"
                        AllowFocusOnInteraction="False">
                        <sf:SfDataGrid.Columns>
                            <sf:GridTextColumn MappingName="OrderID"/>
                        </sf:SfDataGrid.Columns>

                        
                        
                    </sf:SfDataGrid>-->


                    <controls:DataGrid
                        RelativePanel.Below="AllocationModeStack"
                        RelativePanel.AlignBottomWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True" 
                        RelativePanel.AlignRightWithPanel="True"
                        x:Name="OrdersGrid"
                        ItemsSource="{x:Bind ViewModel.AllocatedOrders, Mode=TwoWay}"
                        AutoGenerateColumns="False"
                        Style="{StaticResource AllocationDataGridStyle}"
                        ColumnHeaderStyle="{StaticResource AllocationDataGridColumnHeaderStyle}"
                        RowStyle="{StaticResource AllocationDataGridRowStyle}"
                        CellStyle="{StaticResource AllocationDataGridCellStyle}"
                        RowDetailsVisibilityMode="Visible"
                        Background="{StaticResource AcrylicBackgroundFillColorBaseBrush}"
                        GridLinesVisibility="All"
                        AllowFocusOnInteraction="False"
                        SelectionMode="Single"
                        IsReadOnly="False">


                        <controls:DataGrid.Columns>
                            <controls:DataGridTemplateColumn Header="Order ID" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:Order">
                                        <TextBlock Text="{x:Bind OrderID}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>


                            <controls:DataGridTemplateColumn Header="Customer" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:Order">
                                        <TextBlock Text="{x:Bind Customer.CustomerName}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>

                            <controls:DataGridTemplateColumn Header="Total Ordered" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:Order">
                                        <TextBlock Text="{x:Bind TotalOrderedAllocated, Mode=OneWay}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>


                            <controls:DataGridTemplateColumn Header="Total Allocated" Width="Auto">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="models:Order">
                                        <TextBlock Text="{x:Bind TotalAllocated, Mode=OneWay}"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>
                            
                        </controls:DataGrid.Columns>

                        <controls:DataGrid.RowDetailsTemplate>
                            <DataTemplate x:DataType="models:Order">
                                <!--<NumberBox Text="{x:Bind Items[0].QuanAllocated, Mode=TwoWay}"/>-->
                                <uc:AllocatedItemsGridControl Items="{x:Bind Items, Mode=OneWay}" ValidateCell="AllocatedItemsGridControl_ValidateCell"/>
                                <!--<sf:SfDataGrid ItemsSource="{x:Bind Path=Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CurrentCellValidating="AllocatedItemsGridControl_ValidateCell" AutoGenerateColumns="False">
                                    <sf:SfDataGrid.Columns>
                                        <sf:GridNumericColumn MappingName="QuanAllocated" AllowEditing="True" DataValidationMode="InView"/>
                                    </sf:SfDataGrid.Columns>
                                </sf:SfDataGrid>-->
                            </DataTemplate>
                        </controls:DataGrid.RowDetailsTemplate>
                    </controls:DataGrid>
                </RelativePanel>
            </SplitView.Content>
        </SplitView>
    </RelativePanel>
</Page>
